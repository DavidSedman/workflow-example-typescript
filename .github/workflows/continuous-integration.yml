name: Continuous Integration

on: [push]

jobs:
  Lint_Docker:
    name: "Docker: Lint"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: hadolint/hadolint-action@v1.5.0
      with:
        dockerfile: Dockerfile

  Build:
    name: "Build: Docker Image & Typescript"
    needs: Lint_Docker
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: false
        file: ./Dockerfile
        tags: api:latest
        outputs: type=docker,dest=/tmp/api_image.tar
    
    - name: Upload image as artifact
      uses: actions/upload-artifact@v2
      with:
        name: api
        path: /tmp/api_image.tar
    
  Lint_TypeScript:
    name: "TypeScript: Lint"
    needs: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Download artifacts (Docker images) from previous workflows
      uses: actions/download-artifact@v2
      with:
        name: api
        path: /tmp
    
    - name: Load Docker images from previous workflows
      run: |
        docker load --input /tmp/api_image.tar

    - name: Run lint inside docker
      run: docker run --volume="$(pwd)/src:/api" --entrypoint="sh" api:latest -c "npm ci && npm run lint"
    
  Dependancies:
    name: "TypeScript: Package Dependancies"
    needs: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Download artifacts (Docker images) from previous workflows
      uses: actions/download-artifact@v2
      with:
        name: api
        path: /tmp
    
    - name: Load Docker images from previous workflows
      run: |
        docker load --input /tmp/api_image.tar

    - name: Run dependancy Tracking inside Docker 
      run: docker run --volume="$(pwd)/src:/api" --entrypoint="sh" api:latest -c "npm ci && npm outdated && npx depcheck"
  
  Test:
    name: "TypeScript: Automated Test"
    needs: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Download artifacts (Docker images) from previous workflows
      uses: actions/download-artifact@v2
      with:
        name: api
        path: /tmp
    
    - name: Load Docker images from previous workflows
      run: |
        docker load --input /tmp/api_image.tar

    - name: Run automated tests inside Docker
      run: docker run --volume="$(pwd)/src:/api" --entrypoint="sh" api:latest -c "npm ci && npm test"
    
    - name: Publish Report
      uses: EnricoMi/publish-unit-test-result-action@v1
      with:
        check_name: Test Results
        comment_title: Test Results
        report_individual_runs: true
        compare_to_earlier_commit: true
        files: "$(pwd)/src/__testing__/results/report.xml"